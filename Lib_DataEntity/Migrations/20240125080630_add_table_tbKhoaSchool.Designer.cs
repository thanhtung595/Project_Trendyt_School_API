// <auto-generated />
using System;
using App_DataBaseEntity.DbContextEntity_SQL_Sever;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lib_DataEntity.Migrations
{
    [DbContext(typeof(Trendyt_DbContext))]
    [Migration("20240125080630_add_table_tbKhoaSchool")]
    partial class add_table_tbKhoaSchool
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbAccount", b =>
                {
                    b.Property<int>("id_Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Account"));

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time_Create")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("birthday_User")
                        .HasColumnType("datetime2");

                    b.Property<string>("email_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("id_Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("id_TypeAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_Ban")
                        .HasColumnType("bit");

                    b.Property<bool>("is_Delete")
                        .HasColumnType("bit");

                    b.Property<string>("phone_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Account");

                    b.HasIndex("id_Role");

                    b.HasIndex("id_TypeAccount");

                    b.ToTable("tbAccount");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbKhoaSchool", b =>
                {
                    b.Property<int>("id_KhoaSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_KhoaSchool"));

                    b.Property<int>("id_School")
                        .HasColumnType("int");

                    b.Property<string>("ma_Khoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_Khoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_KhoaSchool");

                    b.HasIndex("id_School");

                    b.ToTable("tbKhoaSchool");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbRole", b =>
                {
                    b.Property<Guid>("id_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name_Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Role");

                    b.ToTable("tbRole");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbSchool", b =>
                {
                    b.Property<int>("id_School")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_School"));

                    b.Property<string>("adderss_School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description_School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("evaluate_School")
                        .HasColumnType("real");

                    b.Property<int>("id_Account")
                        .HasColumnType("int");

                    b.Property<string>("name_School")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_School");

                    b.HasIndex("id_Account");

                    b.ToTable("tbSchool");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbToken", b =>
                {
                    b.Property<Guid>("id_Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("access_Expire_Token")
                        .HasColumnType("datetime2");

                    b.Property<string>("access_Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Account")
                        .HasColumnType("int");

                    b.Property<DateTime>("refresh_Expire_Token")
                        .HasColumnType("datetime2");

                    b.Property<string>("refresh_Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Token");

                    b.HasIndex("id_Account");

                    b.ToTable("tbToken");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbTypeAccount", b =>
                {
                    b.Property<Guid>("id_TypeAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name_TypeAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_TypeAccount");

                    b.ToTable("tbTypeAccount");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbAccount", b =>
                {
                    b.HasOne("App_Models.Models_Table_CSDL.tbRole", "tbRole")
                        .WithMany()
                        .HasForeignKey("id_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Models.Models_Table_CSDL.tbTypeAccount", "tbTypeAccount")
                        .WithMany()
                        .HasForeignKey("id_TypeAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbRole");

                    b.Navigation("tbTypeAccount");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbKhoaSchool", b =>
                {
                    b.HasOne("App_Models.Models_Table_CSDL.tbSchool", "tbSchool")
                        .WithMany()
                        .HasForeignKey("id_School")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbSchool");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbSchool", b =>
                {
                    b.HasOne("App_Models.Models_Table_CSDL.tbAccount", "tbAccount")
                        .WithMany()
                        .HasForeignKey("id_Account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbAccount");
                });

            modelBuilder.Entity("App_Models.Models_Table_CSDL.tbToken", b =>
                {
                    b.HasOne("App_Models.Models_Table_CSDL.tbAccount", "tbAccount")
                        .WithMany()
                        .HasForeignKey("id_Account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
